"""Add password_hash column to User model

Revision ID: a9013cebde71
Revises: 
Create Date: 2024-08-13 14:44:51.318084

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = 'xxxxxx'
down_revision = None
branch_labels = None
depends_on = None

def column_exists(table_name, column_name):
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    columns = inspector.get_columns(table_name)
    return any(col['name'] == column_name for col in columns)

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists('user', 'password_hash'):
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.add_column(sa.Column('password_hash', sa.String(length=128), nullable=True))

        # Update existing rows to set a default value for password_hash
        op.execute("UPDATE user SET password_hash = ''")

        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.alter_column('password_hash', nullable=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('password_hash')
    # ### end Alembic commands ###